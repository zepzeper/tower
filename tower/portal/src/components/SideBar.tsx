import React from 'react';
import { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import {
  LayoutDashboard,
  Link as LinkIcon,
  Settings,
  Database,
  BarChart,
  Users,
  Zap,
  ChevronDown,
  Shield,
  UserCog,
} from 'lucide-react';
import { useTheme } from '../context/ThemeContext';

interface NavigationItem {
  name: string;
  href: string;
  icon: React.ComponentType<{ className?: string }>;
}

const Sidebar = () => {
  const location = useLocation();
  const { theme } = useTheme();
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);
  const { t } = useTranslation('pages');

  const navigation: NavigationItem[] = [
    { name: t('navigation.dashboard'), href: '/', icon: LayoutDashboard },
    { name: t('navigation.connections'), href: '/connections', icon: LinkIcon },
    { name: t('navigation.apiIntegrations'), href: '/integrations', icon: Database },
    { name: t('navigation.analytics'), href: '/analytics', icon: BarChart },
    { name: t('navigation.users'), href: '/users', icon: Users },
  ];

  const settingsNavigation: NavigationItem[] = [
    { name: t('navigation.account'), href: '/account', icon: UserCog },
    { name: t('navigation.security'), href: '/account/security', icon: Shield },
  ];

  return (
    <div className={`${theme === 'light' ? 'bg-white text-gray-800 border-r border-gray-200' : 'bg-gray-900 text-white border-r border-gray-700'} w-64 min-h-full hidden lg:flex flex-col transition-colors duration-200`}>
      <div className={`p-4 border-b ${theme === 'light' ? 'border-gray-200' : 'border-gray-700'}`}>
        <div className="flex items-center space-x-2">
          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" zoomAndPan="magnify" viewBox="0 0 375 374.999991" height="50" preserveAspectRatio="xMidYMid meet" version="1.0"><defs><clipPath id="3e570e57d4"><path d="M 43.195312 88.289062 L 331.804688 88.289062 L 331.804688 287 L 43.195312 287 Z M 43.195312 88.289062 " clip-rule="nonzero" /></clipPath><clipPath id="d7789426f9"><path d="M 141 116 L 251 116 L 251 180 L 141 180 Z M 141 116 " clip-rule="nonzero" /></clipPath><clipPath id="bf55d87313"><path d="M 149.746094 109.363281 L 258.027344 125.644531 L 249.890625 179.785156 L 141.605469 163.503906 Z M 149.746094 109.363281 " clip-rule="nonzero" /></clipPath><clipPath id="da55921ae3"><path d="M 149.746094 109.363281 L 258.027344 125.644531 L 249.890625 179.785156 L 141.605469 163.503906 Z M 149.746094 109.363281 " clip-rule="nonzero" /></clipPath><clipPath id="39ec64de6a"><path d="M 104 67 L 299 67 L 299 154 L 104 154 Z M 104 67 " clip-rule="nonzero" /></clipPath><clipPath id="286aed72f0"><path d="M 113.289062 55.183594 L 307.320312 81.0625 L 297.40625 155.402344 L 103.375 129.527344 Z M 113.289062 55.183594 " clip-rule="nonzero" /></clipPath><clipPath id="2e79a0b6ce"><path d="M 113.289062 55.183594 L 307.320312 81.0625 L 297.40625 155.402344 L 103.375 129.527344 Z M 113.289062 55.183594 " clip-rule="nonzero" /></clipPath></defs><rect x="-37.5" width="450" fill="#ffffff" y="-37.499999" height="449.999989" fill-opacity="1" /><rect x="-37.5" width="450" fill="#176242" y="-37.499999" height="449.999989" fill-opacity="1" /><g clip-path="url(#3e570e57d4)"><path fill="#ffffff" d="M 119.859375 142.402344 C 131.582031 109.933594 161.34375 88.289062 196.519531 88.289062 C 238.003906 88.289062 273.175781 119.855469 277.6875 161.339844 C 308.347656 165.851562 331.796875 192.003906 331.796875 223.570312 C 331.796875 258.742188 303.839844 286.699219 268.667969 286.699219 L 115.351562 286.699219 C 75.667969 286.699219 43.199219 254.234375 43.199219 214.550781 C 43.199219 173.066406 77.472656 139.695312 119.859375 142.402344 Z M 115.351562 268.664062 L 268.667969 268.664062 C 293.917969 268.664062 313.761719 248.820312 313.761719 223.570312 C 313.761719 198.316406 293.917969 178.476562 268.667969 178.476562 C 263.253906 178.476562 259.648438 174.867188 259.648438 169.457031 C 259.648438 134.285156 231.691406 106.328125 196.519531 106.328125 C 167.65625 106.328125 142.40625 126.167969 135.191406 155.027344 C 134.289062 159.539062 129.78125 162.242188 125.269531 161.339844 C 121.664062 160.4375 118.054688 160.4375 115.351562 160.4375 C 85.589844 160.4375 61.238281 184.789062 61.238281 214.550781 C 61.238281 244.3125 85.589844 268.664062 115.351562 268.664062 Z M 115.351562 268.664062 " fill-opacity="1" fill-rule="nonzero" /></g><g clip-path="url(#d7789426f9)"><g clip-path="url(#bf55d87313)"><g clip-path="url(#da55921ae3)"><path fill="#8be0bb" d="M 250.023438 179.878906 L 239.734375 178.328125 C 243.375 154.113281 226.632812 131.445312 202.414062 127.804688 C 178.199219 124.164062 155.53125 140.90625 151.890625 165.121094 L 141.601562 163.574219 C 146.09375 133.683594 174.070312 113.019531 203.964844 117.515625 C 233.855469 122.011719 254.515625 149.984375 250.023438 179.878906 Z M 250.023438 179.878906 " fill-opacity="1" fill-rule="nonzero" /></g></g></g><g clip-path="url(#39ec64de6a)"><g clip-path="url(#286aed72f0)"><g clip-path="url(#2e79a0b6ce)"><path fill="#8be0bb" d="M 292.332031 153.511719 C 291.8125 153.445312 291.316406 153.300781 290.84375 153.082031 C 290.371094 152.863281 289.9375 152.582031 289.546875 152.234375 C 289.160156 151.886719 288.828125 151.488281 288.558594 151.042969 C 288.289062 150.597656 288.089844 150.121094 287.960938 149.613281 C 287.398438 147.339844 286.753906 145.085938 286.023438 142.859375 C 285.292969 140.632812 284.480469 138.4375 283.589844 136.269531 C 282.695312 134.101562 281.71875 131.972656 280.667969 129.878906 C 279.613281 127.785156 278.484375 125.734375 277.277344 123.726562 C 276.070312 121.71875 274.789062 119.757812 273.4375 117.84375 C 272.082031 115.929688 270.660156 114.070312 269.167969 112.261719 C 267.671875 110.457031 266.117188 108.707031 264.492188 107.019531 C 262.867188 105.328125 261.183594 103.699219 259.4375 102.136719 C 257.695312 100.570312 255.894531 99.074219 254.035156 97.644531 C 252.179688 96.214844 250.269531 94.859375 248.3125 93.570312 C 246.351562 92.285156 244.347656 91.074219 242.300781 89.9375 C 240.25 88.800781 238.160156 87.742188 236.03125 86.761719 C 233.902344 85.78125 231.742188 84.878906 229.546875 84.0625 C 227.347656 83.242188 225.125 82.507812 222.875 81.855469 C 220.625 81.203125 218.351562 80.636719 216.058594 80.152344 C 213.765625 79.667969 211.457031 79.273438 209.132812 78.964844 C 206.8125 78.652344 204.480469 78.429688 202.140625 78.296875 C 199.800781 78.160156 197.457031 78.113281 195.117188 78.152344 C 192.773438 78.191406 190.433594 78.320312 188.101562 78.535156 C 185.765625 78.75 183.445312 79.050781 181.132812 79.4375 C 178.820312 79.828125 176.527344 80.300781 174.253906 80.863281 C 171.976562 81.421875 169.726562 82.066406 167.496094 82.792969 C 165.269531 83.523438 163.074219 84.332031 160.90625 85.226562 C 158.738281 86.117188 156.609375 87.089844 154.515625 88.144531 C 152.421875 89.195312 150.367188 90.324219 148.359375 91.53125 C 146.347656 92.734375 144.386719 94.015625 142.472656 95.367188 C 140.558594 96.71875 138.699219 98.140625 136.890625 99.632812 C 135.082031 101.125 133.332031 102.683594 131.644531 104.304688 C 129.953125 105.925781 128.324219 107.609375 126.757812 109.355469 C 125.191406 111.097656 123.695312 112.898438 122.265625 114.753906 C 120.832031 116.613281 119.476562 118.519531 118.1875 120.476562 C 116.898438 122.433594 115.6875 124.4375 114.546875 126.488281 C 114.382812 126.785156 114.1875 127.066406 113.96875 127.328125 C 113.746094 127.585938 113.5 127.824219 113.234375 128.035156 C 112.964844 128.25 112.679688 128.433594 112.375 128.589844 C 112.070312 128.746094 111.753906 128.871094 111.425781 128.964844 C 111.097656 129.058594 110.761719 129.121094 110.421875 129.148438 C 110.082031 129.175781 109.742188 129.171875 109.402344 129.132812 C 109.0625 129.09375 108.730469 129.019531 108.402344 128.917969 C 108.078125 128.8125 107.765625 128.675781 107.46875 128.511719 C 107.167969 128.34375 106.886719 128.152344 106.628906 127.929688 C 106.367188 127.710938 106.128906 127.464844 105.917969 127.199219 C 105.703125 126.929688 105.519531 126.644531 105.363281 126.339844 C 105.207031 126.035156 105.082031 125.71875 104.988281 125.390625 C 104.894531 125.0625 104.832031 124.726562 104.804688 124.386719 C 104.777344 124.046875 104.78125 123.707031 104.820312 123.367188 C 104.859375 123.027344 104.929688 122.695312 105.035156 122.367188 C 105.140625 122.042969 105.273438 121.730469 105.441406 121.429688 C 106.703125 119.15625 108.054688 116.933594 109.484375 114.757812 C 110.914062 112.585938 112.425781 110.46875 114.015625 108.40625 C 115.605469 106.34375 117.269531 104.347656 119.007812 102.410156 C 120.746094 100.472656 122.554688 98.605469 124.433594 96.804688 C 126.3125 95.003906 128.253906 93.273438 130.261719 91.617188 C 132.269531 89.960938 134.339844 88.382812 136.464844 86.882812 C 138.589844 85.382812 140.769531 83.960938 143 82.621094 C 145.234375 81.285156 147.511719 80.03125 149.839844 78.863281 C 152.164062 77.695312 154.53125 76.617188 156.9375 75.625 C 159.34375 74.632812 161.78125 73.734375 164.257812 72.925781 C 166.730469 72.117188 169.230469 71.402344 171.757812 70.78125 C 174.285156 70.160156 176.832031 69.632812 179.398438 69.203125 C 181.964844 68.769531 184.546875 68.4375 187.136719 68.199219 C 189.730469 67.960938 192.324219 67.820312 194.929688 67.773438 C 197.53125 67.730469 200.128906 67.785156 202.730469 67.933594 C 205.328125 68.085938 207.914062 68.332031 210.496094 68.675781 C 213.074219 69.019531 215.640625 69.460938 218.183594 69.996094 C 220.730469 70.53125 223.253906 71.160156 225.753906 71.886719 C 228.253906 72.609375 230.722656 73.425781 233.164062 74.335938 C 235.601562 75.246094 238.003906 76.242188 240.367188 77.332031 C 242.730469 78.421875 245.050781 79.597656 247.328125 80.859375 C 249.601562 82.121094 251.828125 83.464844 254.003906 84.894531 C 256.179688 86.324219 258.300781 87.832031 260.363281 89.417969 C 262.425781 91.003906 264.425781 92.667969 266.363281 94.402344 C 268.300781 96.140625 270.171875 97.945312 271.976562 99.824219 C 273.78125 101.699219 275.511719 103.640625 277.167969 105.648438 C 278.828125 107.652344 280.40625 109.71875 281.910156 111.84375 C 283.414062 113.964844 284.835938 116.144531 286.179688 118.375 C 287.519531 120.605469 288.777344 122.882812 289.945312 125.207031 C 291.117188 127.53125 292.199219 129.894531 293.191406 132.300781 C 294.1875 134.707031 295.089844 137.144531 295.902344 139.617188 C 296.710938 142.09375 297.429688 144.589844 298.054688 147.117188 C 298.136719 147.449219 298.1875 147.785156 298.203125 148.128906 C 298.21875 148.46875 298.203125 148.808594 298.152344 149.144531 C 298.101562 149.484375 298.019531 149.8125 297.902344 150.136719 C 297.789062 150.457031 297.640625 150.761719 297.464844 151.054688 C 297.289062 151.347656 297.085938 151.621094 296.855469 151.875 C 296.625 152.125 296.371094 152.351562 296.09375 152.554688 C 295.820312 152.757812 295.527344 152.929688 295.21875 153.074219 C 294.90625 153.21875 294.585938 153.332031 294.253906 153.414062 C 293.621094 153.570312 292.980469 153.601562 292.332031 153.511719 Z M 292.332031 153.511719 " fill-opacity="1" fill-rule="nonzero" /></g></g></g></svg>
          <span className="text-2xl font-bold">{t('sidebar.logo')}<span className={`${theme === 'light' ? 'text-green-600' : 'text-green-400'}`}></span></span>
        </div>
      </div>

      <nav className="flex-1 p-4">
        <ul className="space-y-1">
          {navigation.map((item) => (
            <li key={item.name}>
              <Link
                to={item.href}
                className={`flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors duration-200 ${location.pathname === item.href
                  ? theme === 'light'
                    ? 'bg-green-50 text-green-700 border border-green-100'
                    : 'bg-gray-800 text-green-400 border border-gray-700'
                  : theme === 'light'
                    ? 'text-gray-700 hover:bg-gray-100 hover:text-green-600'
                    : 'text-gray-300 hover:bg-gray-800 hover:text-white'
                  }`}
              >
                <item.icon className="h-5 w-5" />
                <span>{item.name}</span>
              </Link>
            </li>
          ))}

          {/* Settings collapsible section */}
          <li>
            <button
              onClick={() => setIsSettingsOpen(!isSettingsOpen)}
              className={`flex items-center justify-between w-full px-3 py-2 rounded-lg transition-colors duration-200 ${location.pathname.startsWith('/settings')
                ? theme === 'light'
                  ? 'bg-green-50 text-green-700 border border-green-100'
                  : 'bg-gray-800 text-green-400 border border-gray-700'
                : theme === 'light'
                  ? 'text-gray-700 hover:bg-gray-100 hover:text-green-600'
                  : 'text-gray-300 hover:bg-gray-800 hover:text-white'
                }`}
            >
              <div className="flex items-center space-x-3">
                <Settings className="h-5 w-5" />
                <span>{t('navigation.settings')}</span>
              </div>
              <ChevronDown className={`h-4 w-4 transition-transform ${isSettingsOpen ? 'rotate-180' : ''}`} />
            </button>

            {/* Settings submenu */}
            {isSettingsOpen && (
              <ul className={`mt-1 ml-4 pl-2 space-y-1 ${theme === 'light' ? 'border-l border-gray-200' : 'border-l border-gray-700'}`}>
                {settingsNavigation.map((item) => (
                  <li key={item.name}>
                    <Link
                      to={item.href}
                      className={`flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors duration-200 ${location.pathname === item.href
                        ? theme === 'light'
                          ? 'bg-green-50 text-green-700 border border-green-100'
                          : 'bg-gray-800 text-green-400 border border-gray-700'
                        : theme === 'light'
                          ? 'text-gray-700 hover:bg-gray-100 hover:text-green-600'
                          : 'text-gray-300 hover:bg-gray-800 hover:text-white'
                        }`}
                    >
                      <item.icon className="h-4 w-4" />
                      <span className="text-sm">{item.name}</span>
                    </Link>
                  </li>
                ))}
              </ul>
            )}
          </li>
        </ul>
      </nav>
    </div>
  );
};

export default Sidebar;
